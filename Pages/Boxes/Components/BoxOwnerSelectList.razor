
@using flytt2021.Data.Services
@using flytt2021.Data.Entities

@inject MoveService MoveService
@attribute [Authorize]

@if (boxOwners == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="form-group">
        <label for="Item" class="control-label">Ägare av lådan</label>
        <select id="Item" class="form-control" @bind="@Item">
            @foreach (var owner in boxOwners)
            {
                @if (Item != null && String.Equals(owner.Name, Item,
StringComparison.OrdinalIgnoreCase))
                {
                    <option selected value="@owner.Name">@owner.Name</option>
                }
                else
                {
                    <option value="@owner.Name">@owner.Name</option>
                }
            }
        </select>

    </div>
}


@code {
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }
    //private FlyttUser currentUser;

    private string item { get; set; }
    private IEnumerable<BoxOwner> boxOwners;

    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthStat).User;
        var userid = user.Identity.Name;
        //currentUser = UserService.GetUser(userid);

        boxOwners = MoveService.GetBoxOwners(userid);
    }

    [Parameter]
    public string Item
    {
        get { return item; }
        set
        {
            if (item != value)
            {
                item = value;
                if (ItemChanged.HasDelegate)
                {
                    ItemChanged.InvokeAsync(value);
                    OnItemChange.InvokeAsync();
                }
            }
        }
    }

    [Parameter]
    public EventCallback<string> ItemChanged { get; set; }
    [Parameter]
    public EventCallback OnItemChange { get; set; }
}