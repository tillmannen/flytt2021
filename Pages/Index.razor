@page "/"
@using flytt2021.Data.Services
@using flytt2021.Data.Database
@using flytt2021.Data.Entities
@inject NavigationManager NavigationManager
@inject MoveService MoveService
@inject UserService UserService

<AuthorizeView>
    <Authorized>
        @if (move == null)
        {
            <span>Loading...</span>
        }
        else
        {
            <p class="text-center">

                Hej, @flyttUser.UserName!<br />
                <br />
                Du har packat @progress.PackedBoxes flyttkartonger. Vi uppskattar att du kommer att behöva packa @progress.EstimatedBoxCount kartonger. Det betyder att du kommit @progress.PackedPercentage%.
            </p>
            <div class="progress">
                <div class="progress-bar progress-bar-striped bg-success progress-bar-animated" role="progressbar" style="width: @progress.PackedPercentage%" aria-valuenow="@progress.PackedPercentage" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
            <div class="text-center">
                <p>
                    <div class="list-group">
                        @if (flyttUser.MoveId != null)
                        {

                            <a href="boxes/add" class="list-group-item list-group-item-action">
                                <div class="menu-icon"><span class="oi oi-box"></span></div>
                                <div class="menu-item">
                                    <h4 class="list-group-item-heading">Ny flyttkartong</h4>
                                    <p class="list-group-item-text">L&auml;gg till en ny kartong.</p>
                                </div>
                            </a>
                            <a href="/boxes/list" class="list-group-item list-group-item-action">
                                <div class="menu-icon"><span class="oi oi-list"></span></div>
                                <div class="menu-item">
                                    <h4 class="list-group-item-heading">Visa flyttkartonger</h4>
                                    <p class="list-group-item-text">Visa eller s&ouml;k bland redan packade l&aring;dor.</p>
                                </div>
                            </a>
                            <a href="/settings" class="list-group-item list-group-item-action">
                                <div class="menu-icon"><span class="oi oi-cog"></span></div>
                                <div class="menu-item">
                                    <h4 class="list-group-item-heading">Inställningar</h4>
                                    <p class="list-group-item-text">Ändra inställningarna för din flytt.</p>
                                </div>
                            </a>
                        }
                        else
                        {
                            <a href="move/add" class="list-group-item list-group-item-action">
                                <div class="menu-icon"><span class="oi oi-home"></span></div>
                                <div class="menu-item">
                                    <h4 class="list-group-item-heading">Skapa en ny flytt</h4>
                                    <p class="list-group-item-text">L&auml;gg till en ny flytt.</p>
                                </div>
                            </a>
                        }

                    </div>
                </p>

                <form method="post" action="Identity/Account/LogOut">
                    <button type="submit" class="btn btn-primary">Log out</button>
                </form>
            </div>
        }

    </Authorized>
    <NotAuthorized>
        <a href="Identity/Account/Login" class="btn btn-primary">Log in</a>
    </NotAuthorized>
</AuthorizeView>


@code{
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }

    public FlyttUser flyttUser;

    private Move move;
    private MoveProgress progress;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        var user = (await AuthStat).User;
        if (!user.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("Identity/Account/Login");
        }
        flyttUser = UserService.GetUser(user.Identity.Name);

        move = MoveService.GetMove(flyttUser.MoveId.Value);

        progress = MoveService.GetMoveProgress(user.Identity.Name);
    }

}