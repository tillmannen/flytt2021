@page "/"
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <div class="text-center">
            <p>
                Hello, @context.User.Identity.Name!<br />
                <br />
                <div class="list-group">
                    <a href="boxes/add" class="list-group-item list-group-item-action">
                        <h4 class="list-group-item-heading">Ny flyttkartong</h4>
                        <p class="list-group-item-text">L&auml;gg till en ny kartong.</p>
                    </a>
                    <a href="/boxes/list" class="list-group-item list-group-item-action">
                        <h4 class="list-group-item-heading">Visa flyttkartonger</h4>
                        <p class="list-group-item-text">Visa eller s&ouml;k bland redan packade l&aring;dor.</p>
                    </a>
                    <a href="/boxowners/add" class="list-group-item list-group-item-action">
                        <h4 class="list-group-item-heading">Ny l&aring;d&auml;gare</h4>
                        <p class="list-group-item-text">L&auml;gg till en ny l&aring;d&auml;gare.</p>
                    </a>
                    <a href="/boxes/list" class="list-group-item list-group-item-action">
                        <h4 class="list-group-item-heading">Ny packare</h4>
                        <p class="list-group-item-text">L&auml;gg till en ny packare.</p>
                    </a>
                </div>
 
            </p>

            <form method="post" action="Identity/Account/LogOut">
                <button type="submit" class="btn btn-primary">Log out</button>
            </form>
        </div>
    </Authorized>
    <NotAuthorized>
        <a href="Identity/Account/Login" class="btn btn-primary">Log in</a>
    </NotAuthorized>
</AuthorizeView>


@code{
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        var user = (await AuthStat).User;
        if (!user.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("Identity/Account/Login");
        }
    }

}